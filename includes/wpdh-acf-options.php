<?php

if (!defined('ABSPATH'))
  exit; // Exit if accessed directly.


add_action('acf/init', 'my_acf_add_local_field_groups');

function my_acf_add_local_field_groups()
{
  if (function_exists('acf_add_local_field_group')) :
    // Custom Post Type
    acf_add_local_field_group(array(
      'key' => 'group_5889dc5461535',
      'title' => __('Custom Post Type', 'wpdevhelper'),
      'fields' => array(
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5889dc77ab6cf',
          'label' => __('General', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'text_domain',
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889dc99ab6d0',
          'label' => __('Text Domain', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-text_domain',
          'type' => 'text',
          'instructions' => __('Translation file', 'wpdevhelper') . ' <a href="https://developer.wordpress.org/reference/functions/load_textdomain/" target="_blank">' . __('Text Domain', 'wpdevhelper') . '</a>. ' . __('Optional', 'wpdevhelper') . '.',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5889dd5cbc33b',
          'label' => __('Post Type', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => 20,
          'placeholder' => 'new_post_type',
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889dd29bc33a',
          'label' => __('Post Type Key', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-post_type_key',
          'type' => 'text',
          'instructions' => __('Key used in the code. Up to 20 characters, lowercase, no spaces.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Post Type Description', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889dde86a587',
          'label' => 'Description',
          'name' => 'wpdevhelper-posttype-description',
          'type' => 'text',
          'instructions' => __('A short descriptive summary of the post type.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Post Type', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889dd80bc33c',
          'label' => __('Name (Singular)', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-name_singular',
          'type' => 'text',
          'instructions' => __('Post type singular name. e.g. Product, Event or Movie.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Post Types', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889de236a588',
          'label' => __('Name (Plural)', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-name_plural',
          'type' => 'text',
          'instructions' => __('Post type plural name. e.g. Products, Events or Movies.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'category,post_tag',
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889de6e6a589',
          'label' => __('Link To Taxonomies', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-link_to_taxonomies',
          'type' => 'text',
          'instructions' => __('Comma separated list of ', 'wpdevhelper') . '<a href="https://wordpress.org/support/article/taxonomies/" target="_blank">' . __('Taxonomies', 'wpdevhelper') . '</a>.',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes (like pages)', 'wpdevhelper'),
            'false' => __('No (like posts)', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'false',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_5889def5a5276',
          'label' => __('Hierarchical', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-hierarchical',
          'type' => 'select',
          'instructions' => __('Hierarchical post types allows descendants.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5889df78a111a',
          'label' => __('Labels', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Post Types', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889df8ba111b',
          'label' => __('Menu Name', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-menu_name',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Post Type', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e03aa111c',
          'label' => __('Admin Bar Name', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-admin_bar_name',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Item Archives',
          'maxlength' => '',
          'placeholder' => __('Item Archives', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e075a111d',
          'label' => __('Archives', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-archives',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Item Attributes',
          'maxlength' => '',
          'placeholder' => __('Item Attributes', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e092a111e',
          'label' => __('Attributes', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-attributes',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Parent Item:',
          'maxlength' => '',
          'placeholder' => __('Parent Item:', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e0b6a111f',
          'label' => __('Parent Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-parent_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('All Items', 'wpdevhelper'),
          'value' => __('All Items', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e0d1a1120',
          'label' => __('All Items', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-all_items',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Add New Item', 'wpdevhelper'),
          'value' => __('Add New Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e106a1121',
          'label' => __('Add New Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-add_new_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Add New', 'wpdevhelper'),
          'value' => __('Add New', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e119a1122',
          'label' => __('Add New', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-add_new',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('New Item', 'wpdevhelper'),
          'value' => __('New Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e26ebd359',
          'label' => __('New Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-new_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Edit Item', 'wpdevhelper'),
          'value' => __('Edit Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e532bd35a',
          'label' => __('Edit Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-edit_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Update Item', 'wpdevhelper'),
          'value' => __('Update Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e555bd35b',
          'label' => __('Update Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-update_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('View Item', 'wpdevhelper'),
          'value' => __('View Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e585bd35c',
          'label' => __('View Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-view_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('View Items', 'wpdevhelper'),
          'value' => __('View Items', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e5a3bd35d',
          'label' => __('View Items', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-view_items',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Search Item', 'wpdevhelper'),
          'value' => __('Search Item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e5c7bd35e',
          'label' => __('Search Item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-search_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Not found', 'wpdevhelper'),
          'value' => __('Not found', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e5e4bd35f',
          'label' => __('Not Found', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-not_found',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Not found in Trash', 'wpdevhelper'),
          'value' => __('Not found in Trash', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e5fbbd360',
          'label' => __('Not Found in Trash', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-not_found_in_trash',
          'type' => 'text',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Featured Image',
          'maxlength' => '',
          'placeholder' => __('Featured Image', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e61abd361',
          'label' => __('Featured Image', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-featured_image',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Set featured image',
          'maxlength' => '',
          'placeholder' => __('Set featured image', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e637bd362',
          'label' => __('Set featured image', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-set_featured_image',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Remove featured image',
          'maxlength' => '',
          'placeholder' => __('Remove featured image', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e656bd363',
          'label' => __('Remove featured image', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-remove_featured_image',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Use as featured image',
          'maxlength' => '',
          'placeholder' => __('Use as featured image', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e67fbd364',
          'label' => __('Use as featured image', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-use_as_featured_image',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Insert into item',
          'maxlength' => '',
          'placeholder' => __('Insert into item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e690bd365',
          'label' => __('Insert into item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-insert_into_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Uploaded to this item',
          'maxlength' => '',
          'placeholder' => __('Uploaded to this item', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e6b7bd366',
          'label' => __('Uploaded to this item', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-uploaded_to_this_item',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Items list',
          'maxlength' => '',
          'placeholder' => __('Items list', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e6c9bd367',
          'label' => __('Items list', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-items_list',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Items list navigation',
          'maxlength' => '',
          'placeholder' => __('Items list navigation', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e6eabd368',
          'label' => __('Items list navigation', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-items_list_navigation',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'Filter items list',
          'maxlength' => '',
          'placeholder' => __('Filter items list', 'wpdevhelper'),
          'prepend' => '',
          'append' => '',
          'key' => 'field_5889e71fbd369',
          'label' => __('Filter items list', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-filter_items_list',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5889e76b4d5e8',
          'label' => __('Options', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'layout' => 'horizontal',
          'choices' => array(
            'title' => __('Title', 'wpdevhelper'),
            'editor' => __('Content (editor)', 'wpdevhelper'),
            'excerpt' => __('Excerpt', 'wpdevhelper'),
            'author' => __('Author', 'wpdevhelper'),
            'thumbnail' => __('Featured Image', 'wpdevhelper'),
            'comments' => __('Comments', 'wpdevhelper'),
            'trackbacks' => __('Trackbacks', 'wpdevhelper'),
            'revisions' => __('Revisions', 'wpdevhelper'),
            'custom-fields' => __('Custom Fields', 'wpdevhelper'),
            'page-attributes' => __('Page Attributes', 'wpdevhelper'),
            'post-formats' => __('Post Formats', 'wpdevhelper'),
          ),
          'default_value' => array(
            'title', 'editor', 'thumbnail'
          ),
          'allow_custom' => 0,
          'save_custom' => 0,
          'toggle' => 0,
          'return_format' => 'value',
          'key' => 'field_5889e7794d5e9',
          'label' => __('Supports', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-supports',
          'type' => 'checkbox',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => 'Yes',
            'false' => 'No',
          ),
          'default_value' => array(
            0 => 'false',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a093a2d3f0',
          'label' => __('Exclude From Search', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-exclude_from_search',
          'type' => 'select',
          'instructions' => __('Posts of this type should be excluded from search results.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a096c2d3f1',
          'label' => __('Enable Export', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-enable_export',
          'type' => 'select',
          'instructions' => __('Enables post type export.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'false' => __('No (prevent archive pages)', 'wpdevhelper'),
            'true' => __('Yes (use default slug)', 'wpdevhelper'),
            'custom' => __('Yes (set custom archive slug)', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a2b019ac2c',
          'label' => __('Enable Archives', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-enable_archives',
          'type' => 'select',
          'instructions' => __('Enables post type archives. Post type key is used as default archive slug.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => '',
          'prepend' => '',
          'append' => '',
          'key' => 'field_588a2b639ac2d',
          'label' => __('Custom Archive Slug', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-custom_archive_slug',
          'type' => 'text',
          'instructions' => __('Set custom archive slug.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a2b019ac2c',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_ef98653acb08aa',
          'label' => __('Page of post', 'wpdevhelper') . ' <div class="badge">(' . __('New', 'wpdevhelper') . ')</div>',
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'layout' => 'horizontal',
          'choices' => array(
            'date_post' => __('Publication date', 'wpdevhelper'),
            'reading_time' => __('Reading time', 'wpdevhel'),
            'categories' => __('Categories', 'wpdevhelper'),
            'tags' => __('Tags', 'wpdevhelper'),
            'excerpt' => __('Excerpt', 'wpdevhelper'),
            'social_media' => __('Social media', 'wpdevhelper'),
            'thumbnail' => __('Featured Image', 'wpdevhelper'),
            'accessibility' => __('Accessibility options', 'wpdevhelper'),
            'author' => __('Author information', 'wpdevhelper'),
            'navigation' => __('Navigation between contents', 'wpdevhelper'),
            'comments' => __('Comments', 'wpdevhelper'),
          ),
          'default_value' => array(''),
          'allow_custom' => 0,
          'save_custom' => 0,
          'toggle' => 0,
          'return_format' => 'value',
          'key' => 'field_a76d786fbc01effa',
          'label' => __('Remove from content page', 'wpdevhelper'),
          'name' => 'wpdevhelper-single-page-supports',
          'type' => 'checkbox',
          'instructions' => __('Remove from the content page of this post type information on the screen for the user.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'top',
          'endpoint' => 0,
          'key' => 'field_588a2bfea9e46',
          'label' => 'Visibility',
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a2c41a9e47',
          'label' => __('Public', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-public',
          'type' => 'select',
          'instructions' => __('Show post type in the admin UI.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a2c6da9e48',
          'label' => __('Show UI', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-show_ui',
          'type' => 'select',
          'instructions' => __('Show post type UI in the admin.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => 'Yes',
            'false' => 'No',
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a2ca0a9e49',
          'label' => __('Show in Admin Sidebar', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-show_in_admin_sidebar',
          'type' => 'select',
          'instructions' => __('Show post type in admin sidebar.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            5 => __('5 below Posts', 'wpdevhelper'),
            10 => __('10 below Posts', 'wpdevhelper'),
            15 => __('15 below Links', 'wpdevhelper'),
            20 => __('20 below Pages', 'wpdevhelper'),
            25 => __('25 below Comments', 'wpdevhelper'),
            60 => __('60 below first separator', 'wpdevhelper'),
            65 => __('65 below Plugins', 'wpdevhelper'),
            70 => __('70 below Users', 'wpdevhelper'),
            75 => __('75 below Tools', 'wpdevhelper'),
            80 => __('80 below Settings', 'wpdevhelper'),
            100 => __('100 below second separator', 'wpdevhelper'),
          ),
          'default_value' => array(),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a2d8ba9e4a',
          'label' => __('Admin Sidebar Location', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-admin_sidebar_location',
          'type' => 'select',
          'instructions' => '',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'dashicons-admin-post',
          'prepend' => '',
          'append' => '',
          'key' => 'field_588a303c24646',
          'label' => __('Sidebar Icon', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-sidebar_icon',
          'type' => 'text',
          'instructions' => __('Post type icon.', 'wpdevhelper') . ' ' . __('Use', 'wpdevhelper') . '
                          <a href="https://developer.wordpress.org/resource/dashicons/" target="_blank">dashicon</a> ' . __('name or full icon URL', 'wpdevhelper') . ' (http://.../icon.png).',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a30ae24647',
          'label' => __('Show in Admin Bar', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-show_in_admin_bar',
          'type' => 'select',
          'instructions' => __('Show post type in', 'wpdevhelper') . ' <a href="https://wordpress.org/support/article/toolbar/" target="_blank">' . __('admin bar', 'wpdevhelper') . '</a>.',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => 'Yes',
            'no' => 'No',
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a31461e216',
          'label' => __('Show in Navigation Menus', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-show_in_navigation_menus',
          'type' => 'select',
          'instructions' => __('Show post type in', 'wpdevhelper') . ' <a href="https://codex.wordpress.org/Navigation_Menus" target="_blank">' . __('Navigation Menus', 'wpdevhelper') . '</a>.',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'top',
          'endpoint' => 0,
          'key' => 'field_588a31e3e4d24',
          'label' => __('Query', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'default' => __('Default (post type key)', 'wpdevhelper'),
            'custom' => __('Custom query variable', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'default',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a38f7e4d25',
          'label' => __('Query', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-query',
          'type' => 'select',
          'instructions' => __('Direct query variable used in', 'wpdevhelper') . ' <a href="https://developer.wordpress.org/reference/classes/wp_query/#post-type-parameters" target="_blank">WP_Query</a>. e.g. WP_Query( array( \'post_type\' => \'product\', \'term\' => \'disk\' ) )',
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a39b8e4d26',
          'label' => __('Publicly Queryable', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-publicly_queryable',
          'type' => 'select',
          'instructions' => __('Enable front end queries as part of parse_request().', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'post_type',
          'prepend' => '',
          'append' => '',
          'key' => 'field_588a3a3de4d27',
          'label' => __('Custom Query', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-custom_query',
          'type' => 'text',
          'instructions' => __('Custom query variable.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a38f7e4d25',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'top',
          'endpoint' => 0,
          'key' => 'field_588a3a9305504',
          'label' => __('Permalink', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'false' => __('No permalink (prevent URL rewriting)', 'wpdevhelper'),
            'true' => __('Default permalink (post type key)', 'wpdevhelper'),
            'custom' => __('Custom permalink', 'wpdevhelper'),
          ),
          'default_value' => 'true',
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3aa305505',
          'label' => __('Permalink Rewrite', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-permalink_rewrite',
          'type' => 'select',
          'instructions' => __('Use Default Permalinks (using post type key), prevent automatic URL rewriting (no pretty permalinks), or set custom permalinks.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'post_type',
          'prepend' => '',
          'append' => '',
          'key' => 'field_588a3b8064282',
          'label' => __('URL Slug', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-url_slug',
          'type' => 'text',
          'instructions' => __('Pretty permalink base text.', 'wpdevhelper') . ' i.e. www.example.com/product/',
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3aa305505',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3be064283',
          'label' => __('Use URL Slug', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-use_url_slug',
          'type' => 'select',
          'instructions' => __('Use Post Type slug as URL base. Default: Yes.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3aa305505',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3c0764284',
          'label' => __('Pagination', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-pagination',
          'type' => 'select',
          'instructions' => __('Allow post-type pagination. Default: Yes.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3aa305505',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'no' => __('False', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3c9264285',
          'label' => __('Feeds', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-feeds',
          'type' => 'select',
          'instructions' => __('Build feed permastruct. Default: Yes.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3aa305505',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_588a3d2382601',
          'label' => __('Capabilities', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'true' => __('Yes', 'wpdevhelper'),
            'false' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'true',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_626fe71aaba05',
          'label' => 'Show in REST API',
          'name' => 'wpdevhelper-show_in_rest_api',
          'type' => 'select',
          'instructions' => __('Whether to add the post type in the REST API.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => '$post_type',
          'prepend' => '',
          'append' => '',
          'key' => 'field_054f71aabab5',
          'label' => __('Rest Base', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-rest_base',
          'type' => 'text',
          'instructions' => __('The base slug that this post type will use when accessed using the REST API. Default: $post_type', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_626fe71aaba05',
                'operator' => '==',
                'value' => 'true',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => 'WP_REST_Posts_Controller',
          'prepend' => '',
          'append' => '',
          'key' => 'field_0acf4f71ab9b6',
          'label' => __('Rest Controller Class', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-rest_controller_class',
          'type' => 'text',
          'instructions' => __('An optional custom controller to use instead of WP_REST_Posts_Controller. Must be a subclass of WP_REST_Controller. Default: WP_REST_Posts_Controller', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_626fe71aaba05',
                'operator' => '==',
                'value' => 'true',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'base' => __('Base capabilities', 'wpdevhelper'),
            'custom' => __('Custom capabilities', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'base',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3d4582602',
          'label' => __('Capabilities', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-capabilities',
          'type' => 'select',
          'instructions' => __('Set <a href="https://wordpress.org/support/article/roles-and-capabilities/" target="_blank">user capabilities</a> to manage post type.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'read_post',
          'maxlength' => '',
          'placeholder' => 'read_post',
          'prepend' => '',
          'append' => '',
          'key' => 'field_0a501c5b854ed00',
          'label' => __('Read Post', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-read_post',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'read_private_posts',
          'maxlength' => '',
          'placeholder' => 'read_private_posts',
          'prepend' => '',
          'append' => '',
          'key' => 'field_as95a9f10e0b5cd',
          'label' => __('Read Private Posts', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-read_private_posts',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'publish_posts',
          'maxlength' => '',
          'placeholder' => 'publish_posts',
          'prepend' => '',
          'append' => '',
          'key' => 'field_a0a515e41e5ffbb4c',
          'label' => __('Publish Posts', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-publish_posts',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'delete_post',
          'maxlength' => '',
          'placeholder' => 'delete_post',
          'prepend' => '',
          'append' => '',
          'key' => 'field_b262030b05e5dff',
          'label' => __('Delete Post', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-delete_post',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'edit_post',
          'maxlength' => '',
          'placeholder' => 'edit_post',
          'prepend' => '',
          'append' => '',
          'key' => 'field_0545e4fb00ad5c',
          'label' => __('Edit Post', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-edit_post',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'edit_posts',
          'maxlength' => '',
          'placeholder' => 'edit_posts',
          'prepend' => '',
          'append' => '',
          'key' => 'field_0b22e4fb00ad2c',
          'label' => __('Edit Posts', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-edit_posts',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => 'edit_others_posts',
          'maxlength' => '',
          'placeholder' => 'edit_others_posts',
          'prepend' => '',
          'append' => '',
          'key' => 'field_a0a55b0524fdf08',
          'label' => __('Edit Others Posts', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-edit_others_posts',
          'type' => 'text',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_588a3d4582602',
                'operator' => '==',
                'value' => 'custom',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'post' => 'Posts',
            'page' => 'Pages',
          ),
          'default_value' => array(
            0 => 'posts',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
          'key' => 'field_588a3d8e82603',
          'label' => __('Base Capability Type', 'wpdevhelper'),
          'name' => 'wpdevhelper-posttype-base_capability_type',
          'type' => 'select',
          'instructions' => __('Used as a base to construct capabilities.', 'wpdevhelper'),
          'required' => 1,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
      ),
      'location' => array(
        array(
          array(
            'param' => 'post_type',
            'operator' => '==',
            'value' => 'new_post_type',
          ),
        ),
      ),
      'menu_order' => 0,
      'position' => 'normal',
      'style' => 'default',
      'label_placement' => 'top',
      'instruction_placement' => 'label',
      'hide_on_screen' => array(
        0 => 'permalink',
        1 => 'the_content',
        2 => 'excerpt',
        3 => 'custom_fields',
        4 => 'discussion',
        5 => 'comments',
        6 => 'revisions',
        7 => 'slug',
        8 => 'author',
        9 => 'format',
        10 => 'page_attributes',
        11 => 'featured_image',
        12 => 'categories',
        13 => 'tags',
        14 => 'send-trackbacks',
      ),
      'active' => 1,
      'description' => '',
      'local' => 'php',
    ));

    // Dashboard Widgets
    acf_add_local_field_group(array(
      'key' => 'group_588b82375a8d3',
      'title' => 'Dashboard Widgets',
      'fields' => array(
        array(
          'default_value' => '',
          'min' => '',
          'max' => '',
          'step' => '',
          'placeholder' => '',
          'prepend' => '',
          'append' => '',
          'key' => 'field_588b8250b5c75',
          'label' => 'Order',
          'name' => 'order',
          'type' => 'number',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
      ),
      'location' => array(
        array(
          array(
            'param' => 'post_type',
            'operator' => '==',
            'value' => 'dashboard_widget',
          ),
        ),
      ),
      'menu_order' => 0,
      'position' => 'acf_after_title',
      'style' => 'seamless',
      'label_placement' => 'top',
      'instruction_placement' => 'label',
      'hide_on_screen' => array(
        0 => 'permalink',
        1 => 'excerpt',
        2 => 'custom_fields',
        3 => 'discussion',
        4 => 'comments',
        5 => 'revisions',
        6 => 'author',
        7 => 'format',
        8 => 'page_attributes',
        9 => 'featured_image',
        10 => 'categories',
        11 => 'tags',
        12 => 'send-trackbacks',
      ),
      'active' => 1,
      'description' => '',
      'local' => 'php',
    ));

    // Developers Options
    acf_add_local_field_group(array(
      'key' => 'group_587facf95a4c1',
      'title' => __('Developers Options', 'wpdevhelper'),
      'fields' => array(
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_588b50e6a40a5',
          'label' => __('Dashboard', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_588b6695a40a6',
          'label' => __('Remove Widgets', 'wpdevhelper'),
          'name' => 'wpdevhelperDashboard-remove_widgets',
          'type' => 'checkbox',
          'instructions' => __('Hide defaults dashboard widgets.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'dashboard_right_now' => __('At a Glance', 'wpdevhelper'),
            'dashboard_quick_press' => __('Quick Draft', 'wpdevhelper'),
            'dashboard_primary' => __('WordPress News', 'wpdevhelper'),
            'dashboard_activity' => __('Activity', 'wpdevhelper'),
          ),
          'default_value' => array(),
          'allow_custom' => 0,
          'save_custom' => 0,
          'toggle' => 0,
          'return_format' => 'value',
        ),
        array(
          'message' => '<a href="edit.php?post_type=dashboard_widget">' . __('Click here', 'wpdevhelper') . '</a> ' . __('to view, edit or remove your Dashboard widgets boxes.', 'wpdevhelper'),
          'esc_html' => 0,
          'new_lines' => 'wpautop',
          'key' => 'field_588b74d779258',
          'label' => __('Manage Widgets Boxes', 'wpdevhelper'),
          'name' => '',
          'type' => 'message',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5889d80fd5c68',
          'label' => __('Custom Post Types', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'message' => __('Instead of creating your custom post types including many codes in your functions.php file you can create they easily here. <br><a class="button button-primary button-large" href="post-new.php?post_type=new_post_type" style="margin-top:10px;margin-right: 9px;">New post type</a><a class="button button-secondary button-large" href="edit.php?post_type=new_post_type" style="margin-top:10px">See list of post types</a>', 'wpdevhelper'),
          'esc_html' => 0,
          'new_lines' => 'wpautop',
          'key' => 'field_5889d76862b5e',
          'label' => __('Custom Post Types', 'wpdevhelper'),
          'name' => '',
          'type' => 'message',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5890b9803b288',
          'label' => __('Taxonomies', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_5890b87c3b287',
          'label' => __('Hierarchical Order', 'wpdevhelper'),
          'name' => 'wpdevhelperTax-hierarchical_order',
          'type' => 'text',
          'instructions' => __('Insert which taxonomies (slug separated by comma) do you want to maintain in hierarchical order when editing the post/page.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => __('Example', 'wpdevhelper') . ': category,post_tag',
          'prepend' => '',
          'append' => '',
        ),
        array(
          'placement' => 'top',
          'endpoint' => 0,
          'key' => 'field_589c60968380f',
          'label' => __('Login Screen', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_589c8ce73feaf',
          'label' => __('Enable Custom Login Screen?', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-enable_custom_login_screen',
          'type' => 'select',
          'instructions' => __('Select Yes if you want to customize the WordPress login default screen.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'yes' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'no',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
        ),
        array(
          'key' => 'field_589c958462bde',
          'label' => __('Logo Image', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-logo_image',
          'type' => 'image',
          'instructions' => __('Send an image with 100px wide per 100px height.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_589c8ce73feaf',
                'operator' => '==',
                'value' => 'yes',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'return_format' => 'id',
          'preview_size' => 'full',
          'library' => 'all',
          'min_width' => 100,
          'min_height' => 100,
          'min_size' => '',
          'max_width' => 100,
          'max_height' => 100,
          'max_size' => '',
          'mime_types' => '',
        ),
        array(
          'key' => 'field_589c967962be0',
          'label' => __('Logo URL', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-logo_url',
          'type' => 'url',
          'instructions' => __('Select the URL that will be placed in the login screen logo.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_589c8ce73feaf',
                'operator' => '==',
                'value' => 'yes',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'default_value' => '',
          'placeholder' => '',
        ),
        array(
          'key' => 'field_589c96b962be1',
          'label' => __('Logo Title', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-logo_title',
          'type' => 'text',
          'instructions' => __('Enter the link title attribute.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_589c8ce73feaf',
                'operator' => '==',
                'value' => 'yes',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'default_value' => '',
          'maxlength' => '',
          'placeholder' => '',
          'prepend' => '',
          'append' => '',
        ),
        array(
          'key' => 'field_589cc2695ec81',
          'label' => __('Login Text Color Style', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-login_text_color_style',
          'type' => 'select',
          'instructions' => __('Default is Light.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'multiple' => 0,
          'allow_null' => 0,
          'choices' => array(
            'light' => __('Light', 'wpdevhelper'),
            'dark' => __('Dark', 'wpdevhelper'),
          ),
          'default_value' => array(
            0 => 'light',
          ),
          'ui' => 0,
          'ajax' => 0,
          'placeholder' => '',
          'return_format' => 'value',
        ),
        array(
          'key' => 'field_589cc15135eca',
          'label' => __('Body Background Color', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-body_background_color',
          'type' => 'color_picker',
          'instructions' => __('Optional', 'wpdevhelper') . '.',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'default_value' => '#141414',
        ),
        array(
          'key' => 'field_589cbe027b8e2',
          'label' => __('Add Footer Content', 'wpdevhelper'),
          'name' => 'wpdevhelperLoginScreen-add_footer_content',
          'type' => 'wysiwyg',
          'instructions' => __('Type something if you want to add a content below the login form. Optional.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'tabs' => 'visual',
          'toolbar' => 'basic',
          'media_upload' => 0,
          'default_value' => '',
          'delay' => 0,
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_58d111a925bfd',
          'label' => __('Head configuration ', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_587fad46eb6b7',
          'label' => __('Meta Tags', 'wpdevhelper'),
          'name' => 'wpdevhelperAdvanced-wp_head',
          'type' => 'checkbox',
          'instructions' => __('Remove tags created by <b>wp_head()</b> function.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'wlwmanifest' => 'wlwmanifest',
            'generator' => 'Generator',
            'canonical' => 'Canonical',
            'shortlink' => 'Shortlink',
            'emoji_scripts' => 'Emojis',
            'rest_api' => 'REST API to users',
            'xmlrpc' => 'XML-RPC',
            'gutenberg' => 'Gutenberg',
          ),
          'default_value' => array(
            'wlwmanifest',
            'emoji_scripts',
            'xmlrpc'
          ),
          'allow_custom' => 0,
          'save_custom' => 0,
          'toggle' => 0,
          'return_format' => 'value',
        ),
        array(
          'key' => 'field_628638906e2b3',
          'label' => __('Automatic phone number detection?', 'wpdevhelper'),
          'name' => 'phone_number_detection',
          'type' => 'radio',
          'instructions' => __('Determines whether or not telephone numbers in the HTML content will appear as links. Default on Safari in iOS is yes.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'choices' => array(
            'default' => 'Default',
            'no' => __('Disable', 'wpdevhelper'),
            'yes' => __('Enable', 'wpdevhelper'),
          ),
          'allow_null' => 0,
          'other_choice' => 0,
          'default_value' => 'default',
          'layout' => 'horizontal',
          'return_format' => 'value',
          'save_other_choice' => 0,
        ),
        array(
          'default_value' => '#ffffff',
          'key' => 'field_58d111c325bfe',
          'label' => __('Theme Color', 'wpdevhelper'),
          'name' => 'wpdevhelperWPHead-theme_color',
          'type' => 'color_picker',
          'instructions' => __('Change the color of header bar and address bar in mobile browsers.', 'wpdevhelper'),
          'required' => 1,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '#0a0a0a',
          'key' => 'field_a9078df6b9c723eba',
          'label' => __('Theme Color (Dark mode)', 'wpdevhelper') . ' <div class="badge">(' . __('New', 'wpdevhelper') . ')</div>',
          'name' => 'wpdevhelperWPHead-theme_color_darkmode',
          'type' => 'color_picker',
          'instructions' => __('Now choose how the header will look for the dark version of your theme. If not, the top color will be the default for both.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'default_value' => '',
          'maxlength' => 150,
          'placeholder' => '',
          'prepend'   => '',
          'append'    => '',
          'key' => 'field_d0d00soif59fa',
          'label' => __('Meta Description', 'wpdevhelper'),
          'name' => 'wpdevhelperWPHead-meta_description',
          'type' => 'text',
          'instructions' => __('Put a description of your site to show in browser searches. <b>Note:</b> Maximum 150 characters.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'id',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 1200,
          'min_height' => 630,
          'min_size' => '',
          'max_width' => 1200,
          'max_height' => 630,
          'max_size' => '',
          'mime_types' => 'png, jpg',
          'key' => 'field_4594n368095bfc',
          'label' => __('Default image for social media', 'wpdevhelper'),
          'name' => 'head-opengraph-image',
          'type' => 'image',
          'instructions' => __('Resolution 1200x630 pixels. <br> Keep a default image in the links, and display a social media post.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 16,
          'min_height' => 16,
          'min_size' => '',
          'max_width' => 16,
          'max_height' => 16,
          'max_size' => '',
          'mime_types' => '',
          'key' => 'field_favicon16x16',
          'label' => __('Favicon small', 'wpdevhelper'),
          'name' => 'head-icon-16x16',
          'type' => 'image',
          'instructions' => __('Resolution 16x16 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 32,
          'min_height' => 32,
          'min_size' => '',
          'max_width' => 32,
          'max_height' => 32,
          'max_size' => '',
          'mime_types' => '',
          'key' => 'field_58d1118125bfc',
          'label' => __('Favicon normal', 'wpdevhelper'),
          'name' => 'head-icon-favicon',
          'type' => 'image',
          'instructions' => __('Resolution 32x32 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 180,
          'min_height' => 180,
          'min_size' => '',
          'max_width' => 180,
          'max_height' => 180,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon180',
          'label' => 'Apple touch icon 180x180',
          'name' => 'head-icon-apple-touch-icon-180x180',
          'type' => 'image',
          'instructions' => __('Resolution 180x180 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 192,
          'min_height' => 192,
          'min_size' => '',
          'max_width' => 192,
          'max_height' => 192,
          'max_size' => '',
          'mime_types' => '',
          'key' => 'field_favicon192x192',
          'label' => 'Android icon 192x192 pixels',
          'name' => 'head-icon-192x192',
          'type' => 'image',
          'instructions' => __('Resolution 192x192 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => '',
          'min_height' => '',
          'min_size' => '',
          'max_width' => 1024,
          'max_height' => 1024,
          'max_size' => '',
          'mime_types' => 'svg',
          'key' => 'field_a51e5e41fbb0dc9',
          'label' => __('Mask icon for Safari pinned tabs', 'wpdevhelper'),
          'name' => 'head-maskable_icon_safari_tabs',
          'type' => 'image',
          'instructions' => __('Upload the full color .svg icon in black.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_a0a544dd0e5fb00',
          'label' => __('Show all favicon sizes', 'wpdevhelper'),
          'name' => 'all_favicon_sizes',
          'type' => 'true_false',
          'instructions' => __('Put the sizes of older versions of Chrome and iOS. Otherwise, we will display at the highest resolution. Only use this in specific cases.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'message' => '',
          'default_value' => 0,
          'ui' => 0,
          'ui_on_text' => '',
          'ui_off_text' => '',
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 57,
          'min_height' => 57,
          'min_size' => '',
          'max_width' => 57,
          'max_height' => 57,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_58d1101e25bfb',
          'label' => 'Apple touch icon 57x57 pixels',
          'name' => 'head-icon-apple-touch-icon-57x57',
          'type' => 'image',
          'instructions' => __('Resolution 57x57 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 60,
          'min_height' => 60,
          'min_size' => '',
          'max_width' => 60,
          'max_height' => 60,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_58d355bfb',
          'label' => 'Apple touch icon 60x60 pixels',
          'name' => 'head-icon-apple-touch-icon-60x60',
          'type' => 'image',
          'instructions' => __('Resolution 60x60 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 72,
          'min_height' => 72,
          'min_size' => '',
          'max_width' => 72,
          'max_height' => 72,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon72',
          'label' => 'Apple touch icon 72x72 pixels',
          'name' => 'head-icon-apple-touch-icon-72x72',
          'type' => 'image',
          'instructions' => __('Resolution 72x72 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 76,
          'min_height' => 76,
          'min_size' => '',
          'max_width' => 76,
          'max_height' => 76,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon76',
          'label' => 'Apple touch icon 76x76 pixels',
          'name' => 'head-icon-apple-touch-icon-76x76',
          'type' => 'image',
          'instructions' => __('Resolution 76x76 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 114,
          'min_height' => 114,
          'min_size' => '',
          'max_width' => 114,
          'max_height' => 114,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon114',
          'label' => 'Apple touch icon 114x114 pixels',
          'name' => 'head-icon-apple-touch-icon-114x114',
          'type' => 'image',
          'instructions' => __('Resolution 114x114 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 120,
          'min_height' => 120,
          'min_size' => '',
          'max_width' => 120,
          'max_height' => 120,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon120',
          'label' => 'Apple touch icon 120x120 pixels',
          'name' => 'head-icon-apple-touch-icon-120x120',
          'type' => 'image',
          'instructions' => __('Resolution 120x120 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 144,
          'min_height' => 144,
          'min_size' => '',
          'max_width' => 144,
          'max_height' => 144,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon144',
          'label' => 'Apple touch icon 144x144 pixels',
          'name' => 'head-icon-apple-touch-icon-144x144',
          'type' => 'image',
          'instructions' => __('Resolution 144x144 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 152,
          'min_height' => 152,
          'min_size' => '',
          'max_width' => 152,
          'max_height' => 152,
          'max_size' => '',
          'mime_types' => 'png',
          'key' => 'field_favicon152',
          'label' => 'Apple touch icon 152x152 pixels',
          'name' => 'head-icon-apple-touch-icon-152x152',
          'type' => 'image',
          'instructions' => __('Resolution 152x152 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'return_format' => 'url',
          'preview_size' => 'thumbnail',
          'library' => 'uploadedTo',
          'min_width' => 96,
          'min_height' => 96,
          'min_size' => '',
          'max_width' => 96,
          'max_height' => 96,
          'max_size' => '',
          'mime_types' => '',
          'key' => 'field_favicon96x96',
          'label' => 'Android icon 96x96 pixels',
          'name' => 'head-icon-96x96',
          'type' => 'image',
          'instructions' => __('Resolution 96x96 pixels.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => array(
            array(
              array(
                'field' => 'field_a0a544dd0e5fb00',
                'operator' => '==',
                'value' => '1',
              ),
            ),
          ),
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5d611d5fbda0d',
          'label' => __('Template Settings', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_sdf64dsf44',
          'label' => __('Form generator', 'wpdevhelper'),
          'name' => 'wpdevhelperTemplateSettings-form_generator',
          'type' => 'radio',
          'instructions' => __('Quickly create forms to place in your template.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'no' => __('No', 'wpdevhelper'),
            'yes' => __('Yes', 'wpdevhelper'),
          ),
          'default_value' => 'no',
          'other_choice' => 0,
          'save_other_choice' => 0,
          'allow_null' => 0,
          'return_format' => 'value',
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_5890e99978558',
          'label' => __('Admin panel', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_5890e9aa78559',
          'label' => __('Duplicate Post', 'wpdevhelper'),
          'name' => 'wpdevhelperOthers-duplicate_post',
          'type' => 'radio',
          'instructions' => __('Enable duplicate post option?', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'yes' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => 'no',
          'other_choice' => 0,
          'save_other_choice' => 0,
          'allow_null' => 0,
          'return_format' => 'value',
        ),
        array(
          'key' => 'field_5890ea4323fbb',
          'label' => __('Duplicate Page', 'wpdevhelper'),
          'name' => 'wpdevhelperOthers-duplicate_page',
          'type' => 'radio',
          'instructions' => __('Enable duplicate page option?', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'yes' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => 'yes',
          'other_choice' => 0,
          'save_other_choice' => 0,
          'allow_null' => 0,
          'return_format' => 'value',
        ),
        array(
          'key' => 'field_05a4e54ddf415b0c',
          'label' => __('Remove comment support', 'wpdevhelper'),
          'name' => 'wpdevhelperOthers-remove-comment',
          'type' => 'radio',
          'instructions' => __('Disable comments page in dashboard and for posts and pages.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'layout' => 'horizontal',
          'choices' => array(
            'yes' => __('Yes', 'wpdevhelper'),
            'no' => __('No', 'wpdevhelper'),
          ),
          'default_value' => 'no',
          'other_choice' => 0,
          'save_other_choice' => 0,
          'allow_null' => 0,
          'return_format' => 'value',
        ),
        array(
          'placement' => 'left',
          'endpoint' => 0,
          'key' => 'field_587fad2eeb6b6',
          'label' => __('Advanced', 'wpdevhelper'),
          'name' => '',
          'type' => 'tab',
          'instructions' => '',
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_aaf3f51b50cdaa',
          'label' => __('Delete revisions', 'wpdevhelper'),
          'name' => 'wpdevhelperAdvanced-delete_revisions',
          'type' => 'text',
          'placeholder' => '',
          'instructions' => __('Clear all revisions generated by posts and pages from your database. Only run this if you know what you are doing.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
        ),
        array(
          'key' => 'field_587fb19397e05',
          'label' => __('Custom CSS', 'wpdevhelper'),
          'name' => 'wpdevhelperAdvanced-custom_css',
          'type' => 'code',
          'mode' => 'css',
          'placeholder' => '',
          'instructions' => __('Add your css to the head. The &#60;style&#62 tags will be ignored.', 'wpdevhelper'),
          'required' => 0,
          'conditional_logic' => 0,
          'wrapper' => array(
            'width' => '',
            'class' => '',
            'id' => '',
          ),
          'language' => 'css',
          'theme' => 'monokai',
        ),
      ),
      'location' => array(
        array(
          array(
            'param' => 'options_page',
            'operator' => '==',
            'value' => 'wp-dev-helper',
          ),
        ),
      ),
      'menu_order' => 0,
      'position' => 'normal',
      'style' => 'default',
      'label_placement' => 'top',
      'instruction_placement' => 'label',
      'hide_on_screen' => '',
      'active' => 1,
      'description' => '',
    ));

  // PWA
  // acf_add_local_field_group(array(
  //   'key' => 'group_62855c6dd6a01',
  //   'title' => 'PWA',
  //   'fields' => array(
  //     array(
  //       'key' => 'field_628635216e2b0',
  //       'label' => __('Enable Progressive web app?', 'wpdevhelper'),
  //       'name' => 'pwa_enable',
  //       'type' => 'true_false',
  //       'instructions' => __('Basic PWA functionality on your mobile site and for app format.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => 0,
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'message' => '',
  //       'default_value' => 0,
  //       'ui' => 0,
  //       'ui_on_text' => '',
  //       'ui_off_text' => '',
  //     ),
  //     array(
  //       'key' => 'field_50510a51aefa',
  //       'label' => __('Settings', 'wpdevhelper'),
  //       'name' => '',
  //       'type' => 'tab',
  //       'instructions' => '',
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'placement' => 'top',
  //       'endpoint' => 0,
  //     ),
  //     array(
  //       'key' => 'field_628636a46e2b2',
  //       'label' => __('Aplication Name', 'wpdevhelper'),
  //       'name' => 'aplication_name',
  //       'type' => 'text',
  //       'instructions' => __('Make the app title different than the page title.', 'wpdevhelper'),
  //       'required' => 1,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'default_value' => '',
  //       'placeholder' => '',
  //       'prepend' => '',
  //       'append' => '',
  //       'maxlength' => '',
  //     ),
  //     array(
  //       'key' => 'field_6286297b6ed2c',
  //       'label' => __('Web app manifest', 'wpdevhelper'),
  //       'name' => 'web_app_manifest',
  //       'type' => 'url',
  //       'instructions' => __('Add the link to your site directory containing the <b>manifest.json</b> file for the PWA to work.', 'wpdevhelper'),
  //       'required' => 1,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'default_value' => '',
  //       'placeholder' => 'https://domain.com/manifest.json ',
  //     ),
  //     array(
  //       'key' => 'field_628635bd6e2b1',
  //       'label' => __('iOS Status Bar', 'wpdevhelper'),
  //       'name' => 'ios_status_bar',
  //       'type' => 'select',
  //       'instructions' => __('Change the iOS status bar of your progressive web app. Attention, this tag is no longer supported since iOS version 15.0 being replaced by the theme color meta tag.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'choices' => array(
  //         'default' => 'Default',
  //         'black-translucent' => 'Black translucent',
  //         'black' => 'Black'
  //       ),
  //       'default_value' => 'default',
  //       'allow_null' => 0,
  //       'multiple' => 0,
  //       'ui' => 0,
  //       'return_format' => 'value',
  //       'ajax' => 0,
  //       'placeholder' => '',
  //     ),
  //     array(
  //       'return_format' => 'url',
  //       'preview_size' => 'thumbnail',
  //       'library' => 'uploadedTo',
  //       'min_width' => 192,
  //       'min_height' => 192,
  //       'min_size' => '',
  //       'max_width' => 192,
  //       'max_height' => 192,
  //       'max_size' => '',
  //       'mime_types' => 'png',
  //       'key' => 'field_a50054daa0b0b4c',
  //       'label' => __('Android Chrome', 'wpdevhelper'),
  //       'name' => 'android-chrome-192x192',
  //       'type' => 'image',
  //       'instructions' => __('Resolution of 192x192 pixels. Used for android devices. <br>Must be <b>placed manually</b>, use it in manifest.json file.', 'wpdevhelper'),
  //       'required' => 1,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //     ),
  //     array(
  //       'return_format' => 'url',
  //       'preview_size' => 'thumbnail',
  //       'library' => 'uploadedTo',
  //       'min_width' => 512,
  //       'min_height' => 512,
  //       'min_size' => '',
  //       'max_width' => 512,
  //       'max_height' => 512,
  //       'max_size' => '',
  //       'mime_types' => 'png',
  //       'key' => 'field_084e5ff1b0aa541d',
  //       'label' => __('Maskable icon (Android Chrome)', 'wpdevhelper'),
  //       'name' => 'head-maskable_icon',
  //       'type' => 'image',
  //       'instructions' => __('Resolution 512x512 pixels. A maskable icon ensures that the image fills the entire shape without a letterbox effect when installing the app on a device. <br>Must be <b>placed manually</b>, use it in manifest.json file.', 'wpdevhelper'),
  //       'required' => 1,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //     ),
  //     array(
  //       'return_format' => 'url',
  //       'preview_size' => 'thumbnail',
  //       'library' => 'uploadedTo',
  //       'min_width' => 150,
  //       'min_height' => 150,
  //       'min_size' => '',
  //       'max_width' => 150,
  //       'max_height' => 150,
  //       'max_size' => '',
  //       'mime_types' => 'png',
  //       'key' => 'field_0a541d5d4d50ff00',
  //       'label' => 'Windows Metro image',
  //       'name' => 'head-mstile_150x150',
  //       'type' => 'image',
  //       'instructions' => __('Resolution 150x150 pixels. Your site appears as a tile, just like a native Windows app. <br>Must be <b>placed manually</b>, use it in browserconfig.xml file.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //     ),
  //     array(
  //       'key' => 'field_62868341f30f7',
  //       'label' => __('Browser configuration file', 'wpdevhelper'),
  //       'name' => 'browserconfig',
  //       'type' => 'url',
  //       'instructions' => __('This file is only loaded by Windows 8 and 10 devices. The browserconfig.xml is very useful when it comes to favicon: it defines the various block images and the background color.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'default_value' => '',
  //       'placeholder' => 'https://domain.com/browserconfig.xml',
  //     ),
  //     array(
  //       'key' => 'field_628699e6b8dda',
  //       'label' => __('Strech elements', 'wpdevhelper'),
  //       'name' => '',
  //       'type' => 'tab',
  //       'instructions' => '',
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'placement' => 'top',
  //       'endpoint' => 0,
  //     ),
  //     array(
  //       'key' => 'field_62869231b8dd8',
  //       'label' => __('Stretch document height?', 'wpdevhelper'),
  //       'name' => 'stretch_document_height',
  //       'type' => 'radio',
  //       'instructions' => __('Set the minimum height of the document to 100% plus the height of the safe area on top. This will prevent a white bar in the bottom which gets shown since you moved the document "up".', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'choices' => array(
  //         'no' => 'No',
  //         'yes' => 'Yes',
  //       ),
  //       'allow_null' => 0,
  //       'other_choice' => 0,
  //       'default_value' => 'no',
  //       'layout' => 'horizontal',
  //       'return_format' => 'value',
  //       'save_other_choice' => 0,
  //     ),
  //     array(
  //       'key' => 'field_62869352b8dd9',
  //       'label' => __('Stretch fixed elements up', 'wpdevhelper'),
  //       'name' => 'stretch_fixed_elements_up',
  //       'type' => 'text',
  //       'instructions' => __('Add the element classes with fixed position, stretching them, making them look like a native app on iOS. Note: Separate each element with a comma. Attention, your padding will be replaced by this one.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'default_value' => '',
  //       'placeholder' => 'Ex: .fixed-head',
  //       'prepend' => '',
  //       'append' => '',
  //       'maxlength' => '',
  //     ),
  //     array(
  //       'key' => 'field_62869a4cb8ddc',
  //       'label' => __('Stretch fixed elements down', 'wpdevhelper'),
  //       'name' => 'stretch_fixed_elements_down',
  //       'type' => 'text',
  //       'instructions' => '',
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'default_value' => '',
  //       'placeholder' => 'Ex: .navbar-down',
  //       'prepend' => '',
  //       'append' => '',
  //       'maxlength' => '',
  //     ),
  //     array(
  //       'key' => 'field_a0aa56d4fbc004',
  //       'label' => __('Offline Mode', 'wpdevhelper'),
  //       'name' => '',
  //       'type' => 'tab',
  //       'instructions' => '',
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //       'placement' => 'top',
  //       'endpoint' => 0,
  //     ),
  //     array(
  //       'key' => 'field_a0abb8e5ff04',
  //       'label' => __('Optimize theme files', 'wpdevhelper'),
  //       'name' => 'pwa-optimize_files',
  //       'type' => 'text',
  //       'placeholder' => '',
  //       'instructions' => __('Update script files to apply offline mode allowing download as app. We recommend regenerating files every time new styles and scripts are added.', 'wpdevhelper'),
  //       'required' => 0,
  //       'conditional_logic' => array(
  //         array(
  //           array(
  //             'field' => 'field_628635216e2b0',
  //             'operator' => '==',
  //             'value' => '1',
  //           ),
  //         ),
  //       ),
  //       'wrapper' => array(
  //         'width' => '',
  //         'class' => '',
  //         'id' => '',
  //       ),
  //     ),
  //   ),
  //   'location' => array(
  //     array(
  //       array(
  //         'param' => 'options_page',
  //         'operator' => '==',
  //         'value' => 'wpdh-pwa',
  //       ),
  //     ),
  //   ),
  //   'menu_order' => 0,
  //   'position' => 'normal',
  //   'style' => 'seamless',
  //   'label_placement' => 'top',
  //   'instruction_placement' => 'label',
  //   'hide_on_screen' => array(
  //     0 => 'permalink',
  //     1 => 'the_content',
  //     2 => 'excerpt',
  //     3 => 'discussion',
  //     4 => 'comments',
  //     5 => 'revisions',
  //     6 => 'slug',
  //     7 => 'author',
  //     8 => 'format',
  //     9 => 'page_attributes',
  //     10 => 'featured_image',
  //     11 => 'categories',
  //     12 => 'tags',
  //     13 => 'send-trackbacks',
  //   ),
  //   'active' => true,
  //   'description' => '',
  // ));
  endif;
}
